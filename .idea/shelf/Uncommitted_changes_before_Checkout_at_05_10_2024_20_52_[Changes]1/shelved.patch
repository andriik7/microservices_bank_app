Index: cards/src/test/java/microsevicesbank/card/CardControllerTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package microsevicesbank.card;\r\n\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\nimport com.microsevicesbank.card.CardsApplication;\r\nimport com.microsevicesbank.card.constants.CardConstants;\r\nimport com.microsevicesbank.card.dto.CardDTO;\r\nimport com.microsevicesbank.card.exception.ResourceNotFoundException;\r\nimport com.microsevicesbank.card.service.ICardService;\r\nimport jakarta.transaction.Transactional;\r\nimport microsevicesbank.card.display.CamelCaseDisplay;\r\nimport org.junit.jupiter.api.BeforeEach;\r\nimport org.junit.jupiter.api.DisplayNameGeneration;\r\nimport org.junit.jupiter.api.Test;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;\r\nimport org.springframework.boot.test.context.SpringBootTest;\r\nimport org.springframework.http.MediaType;\r\nimport org.springframework.test.context.TestPropertySource;\r\nimport org.springframework.test.web.servlet.MockMvc;\r\n\r\nimport java.util.Random;\r\n\r\nimport static org.junit.jupiter.api.Assertions.*;\r\nimport static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;\r\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\r\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\r\n\r\n@TestPropertySource(\"/application-test.yml\")\r\n@DisplayNameGeneration(CamelCaseDisplay.class)\r\n@AutoConfigureMockMvc\r\n@SpringBootTest(classes = CardsApplication.class)\r\n@Transactional\r\npublic class CardControllerTest {\r\n\r\n    @Autowired\r\n    private MockMvc mockMvc;\r\n\r\n    @Autowired\r\n    private ObjectMapper objectMapper;\r\n\r\n    @Autowired\r\n    private ICardService cardService;\r\n\r\n    private CardDTO publicCard;\r\n\r\n    private static final String DEFAULT_MOBILE_NUMBER = \"0666992283\";\r\n\r\n    private static final String NON_EXISTENT_MOBILE_NUMBER = \"1111111111\";\r\n\r\n    private static final String INVALID_MOBILE_NUMBER = \"123\";\r\n\r\n    @BeforeEach\r\n    public void setUp() {\r\n        publicCard = new CardDTO();\r\n        Long randomCardNumber = (1000000000000000L + new Random().nextLong(900000000000000L));\r\n        publicCard.setMobileNumber(DEFAULT_MOBILE_NUMBER);\r\n        publicCard.setCardNumber(randomCardNumber.toString());\r\n        publicCard.setCardType(CardConstants.CREDIT_CARD);\r\n        publicCard.setTotalLimit(CardConstants.NEW_CARD_LIMIT);\r\n        publicCard.setAmountUsed(0);\r\n        publicCard.setAvailableAmount(CardConstants.NEW_CARD_LIMIT);\r\n    }\r\n\r\n    @Test\r\n    public void createCardSuccessTest() throws Exception {\r\n\r\n        mockMvc.perform(post(\"/api/createCard\")\r\n                                .param(\"mobileNumber\", publicCard.getMobileNumber()))\r\n               .andExpect(status().isCreated())\r\n               .andExpect(jsonPath(\"$.statusCode\").value(CardConstants.STATUS_201))\r\n               .andExpect(jsonPath(\"$.statusMessage\").value(CardConstants.MESSAGE_201));\r\n\r\n        assertNotNull(cardService.fetchCard(publicCard.getMobileNumber()));\r\n\r\n        mockMvc.perform(post(\"/api/createCard\")\r\n                                .param(\"mobileNumber\", publicCard.getMobileNumber()))\r\n               .andExpect(status().isBadRequest())\r\n               .andExpect(jsonPath(\"$.errorCode\").value(\"BAD_REQUEST\"))\r\n               .andExpect(jsonPath(\"$.errorMessage\").value(\"Card already exists with mobile number \" + publicCard.getMobileNumber()));\r\n\r\n        CardDTO fetchedCard = cardService.fetchCard(publicCard.getMobileNumber());\r\n        cardService.deleteCard(fetchedCard.getMobileNumber());\r\n    }\r\n\r\n    @Test\r\n    public void сreateCardInvalidMobileNumberTest() throws Exception {\r\n\r\n        publicCard.setMobileNumber(INVALID_MOBILE_NUMBER);\r\n\r\n        mockMvc.perform(post(\"/api/createCard\").param(\"mobileNumber\", publicCard.getMobileNumber()))\r\n               .andExpect(status().isInternalServerError())\r\n               .andExpect(jsonPath(\"$.errorCode\").value(\"INTERNAL_SERVER_ERROR\"))\r\n               .andExpect(jsonPath(\"$.errorMessage\").value(\"createCard.mobileNumber: Mobile number must be 10 digits\"));\r\n\r\n    }\r\n\r\n    @Test\r\n    public void fetchCardDetailsSuccessTest() throws Exception {\r\n\r\n        cardService.createCard(publicCard.getMobileNumber());\r\n        CardDTO fetchedCard = cardService.fetchCard(publicCard.getMobileNumber());\r\n\r\n        mockMvc.perform(get(\"/api/fetchCard\").param(\"mobileNumber\", publicCard.getMobileNumber()))\r\n               .andExpect(status().isOk())\r\n               .andExpect(jsonPath(\"$.mobileNumber\").value(fetchedCard.getMobileNumber()))\r\n               .andExpect(jsonPath(\"$.cardNumber\").value(fetchedCard.getCardNumber()))\r\n               .andExpect(jsonPath(\"$.cardType\").value(fetchedCard.getCardType()))\r\n               .andExpect(jsonPath(\"$.totalLimit\").value(fetchedCard.getTotalLimit()))\r\n               .andExpect(jsonPath(\"$.amountUsed\").value(fetchedCard.getAmountUsed()))\r\n               .andExpect(jsonPath(\"$.availableAmount\").value(fetchedCard.getAvailableAmount()));\r\n\r\n        cardService.deleteCard(fetchedCard.getMobileNumber());\r\n    }\r\n\r\n    @Test\r\n    public void fetchCardDetailsInvalidMobileNumberTest() throws Exception {\r\n\r\n        mockMvc.perform(get(\"/api/fetchCard\").param(\"mobileNumber\", INVALID_MOBILE_NUMBER)).andExpect(status().isInternalServerError())\r\n               .andExpect(jsonPath(\"$.errorCode\").value(\"INTERNAL_SERVER_ERROR\"))\r\n               .andExpect(jsonPath(\"$.errorMessage\").value(\"fetchCardDetails.mobileNumber: Mobile number must be 10 digits\"));\r\n\r\n        mockMvc.perform(get(\"/api/fetchCard\").param(\"mobileNumber\", NON_EXISTENT_MOBILE_NUMBER)).andExpect(status().isNotFound())\r\n               .andExpect(jsonPath(\"$.errorCode\").value(\"NOT_FOUND\"))\r\n               .andExpect(jsonPath(\"$.errorMessage\").value(\"Card not found with mobileNumber : '\" + NON_EXISTENT_MOBILE_NUMBER + \"'\"));\r\n    }\r\n\r\n    @Test\r\n    public void updateCardSuccessTest() throws Exception {\r\n\r\n        cardService.createCard(publicCard.getMobileNumber());\r\n        publicCard = cardService.fetchCard(publicCard.getMobileNumber());\r\n\r\n        CardDTO updatedCard = new CardDTO();\r\n        updatedCard.setMobileNumber(\"0505554466\");\r\n        updatedCard.setCardNumber(publicCard.getCardNumber());\r\n        updatedCard.setCardType(\"Debit Card\");\r\n        updatedCard.setTotalLimit(5000);\r\n        updatedCard.setAmountUsed(500);\r\n        updatedCard.setAvailableAmount(4500);\r\n\r\n        mockMvc.perform(put(\"/api/updateCard\")\r\n                                .contentType(MediaType.APPLICATION_JSON)\r\n                                .content(objectMapper.writeValueAsString(updatedCard)))\r\n               .andExpect(status().isOk())\r\n               .andExpect(jsonPath(\"$.statusCode\").value(CardConstants.STATUS_200))\r\n               .andExpect(jsonPath(\"$.statusMessage\").value(CardConstants.MESSAGE_200));\r\n\r\n        assertEquals(updatedCard, cardService.fetchCard(updatedCard.getMobileNumber()));\r\n\r\n        cardService.deleteCard(updatedCard.getMobileNumber());\r\n    }\r\n\r\n    @Test\r\n    public void updateCardInvalidMobileNumberTest() throws Exception {\r\n\r\n        mockMvc.perform(put(\"/api/updateCard\")\r\n                                .contentType(MediaType.APPLICATION_JSON)\r\n                                .content(objectMapper.writeValueAsString(publicCard)))\r\n               .andExpect(status().isNotFound())\r\n               .andExpect(jsonPath(\"$.errorCode\").value(\"NOT_FOUND\"))\r\n               .andExpect(jsonPath(\"$.errorMessage\").value(\"Card not found with cardNumber : '\" + publicCard.getCardNumber() + \"'\"));\r\n\r\n        publicCard.setMobileNumber(INVALID_MOBILE_NUMBER);\r\n        publicCard.setCardNumber(\"12345\");\r\n        publicCard.setCardType(\"\");\r\n        publicCard.setTotalLimit(0);\r\n        publicCard.setAmountUsed(-1);\r\n        publicCard.setAvailableAmount(-1);\r\n\r\n        mockMvc.perform(put(\"/api/updateCard\")\r\n                                .contentType(MediaType.APPLICATION_JSON)\r\n                                .content(objectMapper.writeValueAsString(publicCard)))\r\n               .andExpect(status().isBadRequest())\r\n               .andExpect(jsonPath(\"$.mobileNumber\").value(\"Mobile number must be 10 digits\"))\r\n               .andExpect(jsonPath(\"$.cardNumber\").value(\"Card number must be 16 digits\"))\r\n               .andExpect(jsonPath(\"$.cardType\").value(\"Card type cannot be empty\"))\r\n               .andExpect(jsonPath(\"$.totalLimit\").value(\"Total limit must be greater than 0\"))\r\n               .andExpect(jsonPath(\"$.amountUsed\").value(\"Amount used must be greater than 0 or equal to 0\"))\r\n               .andExpect(jsonPath(\"$.availableAmount\").value(\"Available amount must be greater than 0 or equal to 0\"));\r\n    }\r\n\r\n    @Test\r\n    public void deleteCardSuccessTest() throws Exception {\r\n\r\n        cardService.createCard(publicCard.getMobileNumber());\r\n\r\n        assertDoesNotThrow(() -> cardService.fetchCard(publicCard.getMobileNumber()));\r\n\r\n        mockMvc.perform(delete(\"/api/deleteCard\")\r\n                                .param(\"mobileNumber\", publicCard.getMobileNumber()))\r\n               .andExpect(status().isOk())\r\n               .andExpect(jsonPath(\"$.statusCode\").value(CardConstants.STATUS_200))\r\n               .andExpect(jsonPath(\"$.statusMessage\").value(CardConstants.MESSAGE_200));\r\n\r\n        assertThrows(ResourceNotFoundException.class, () -> cardService.fetchCard(publicCard.getMobileNumber()));\r\n    }\r\n\r\n    @Test\r\n    public void deleteCardInvalidMobileNumberTest() throws Exception {\r\n        mockMvc.perform(delete(\"/api/deleteCard\")\r\n                                .param(\"mobileNumber\", NON_EXISTENT_MOBILE_NUMBER))\r\n               .andExpect(status().isNotFound())\r\n               .andExpect(jsonPath(\"$.errorCode\").value(\"NOT_FOUND\"))\r\n               .andExpect(jsonPath(\"$.errorMessage\").value(\"Card not found with mobileNumber : '\" + NON_EXISTENT_MOBILE_NUMBER + \"'\"));\r\n\r\n        mockMvc.perform(delete(\"/api/deleteCard\")\r\n                                .param(\"mobileNumber\", INVALID_MOBILE_NUMBER))\r\n               .andExpect(status().isInternalServerError())\r\n               .andExpect(jsonPath(\"$.errorCode\").value(\"INTERNAL_SERVER_ERROR\"))\r\n               .andExpect(jsonPath(\"$.errorMessage\").value(\"deleteCardDetails.mobileNumber: Mobile number must be 10 digits\"));\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cards/src/test/java/microsevicesbank/card/CardControllerTest.java b/cards/src/test/java/microsevicesbank/card/CardControllerTest.java
--- a/cards/src/test/java/microsevicesbank/card/CardControllerTest.java	
+++ b/cards/src/test/java/microsevicesbank/card/CardControllerTest.java	
@@ -64,6 +64,9 @@
     @Test
     public void createCardSuccessTest() throws Exception {
 
+        if (cardService.fetchCard(publicCard.getMobileNumber()) != null)
+            cardService.deleteCard(publicCard.getMobileNumber());
+
         mockMvc.perform(post("/api/createCard")
                                 .param("mobileNumber", publicCard.getMobileNumber()))
                .andExpect(status().isCreated())
@@ -97,6 +100,9 @@
     @Test
     public void fetchCardDetailsSuccessTest() throws Exception {
 
+        if (cardService.fetchCard(publicCard.getMobileNumber()) != null)
+            cardService.deleteCard(publicCard.getMobileNumber());
+
         cardService.createCard(publicCard.getMobileNumber());
         CardDTO fetchedCard = cardService.fetchCard(publicCard.getMobileNumber());
 
@@ -127,6 +133,9 @@
     @Test
     public void updateCardSuccessTest() throws Exception {
 
+        if (cardService.fetchCard(publicCard.getMobileNumber()) != null)
+            cardService.deleteCard(publicCard.getMobileNumber());
+
         cardService.createCard(publicCard.getMobileNumber());
         publicCard = cardService.fetchCard(publicCard.getMobileNumber());
 
@@ -181,8 +190,8 @@
 
     @Test
     public void deleteCardSuccessTest() throws Exception {
-
-        cardService.createCard(publicCard.getMobileNumber());
+        if (cardService.fetchCard(publicCard.getMobileNumber()) == null)
+            cardService.createCard(publicCard.getMobileNumber());
 
         assertDoesNotThrow(() -> cardService.fetchCard(publicCard.getMobileNumber()));
 
Index: loans/target/jib-image.digest
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>sha256:1c5da4e90f85664150a96ec06541864cb37d1959d45208688903b00aa89fb11e
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/loans/target/jib-image.digest b/loans/target/jib-image.digest
--- a/loans/target/jib-image.digest	
+++ b/loans/target/jib-image.digest	
@@ -1,1 +1,1 @@
-sha256:1c5da4e90f85664150a96ec06541864cb37d1959d45208688903b00aa89fb11e
\ No newline at end of file
+sha256:b6e173b546e0525110e0f376902e8710e97113cdfcbc74392d4acd3a2f083a4b
\ No newline at end of file
Index: loans/target/classes/schema.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>CREATE TABLE IF NOT EXISTS `loans` (\r\n  `loan_id` int NOT NULL AUTO_INCREMENT,\r\n  `mobile_number` varchar(15) NOT NULL,\r\n  `loan_number` varchar(100) NOT NULL,\r\n  `loan_type` varchar(100) NOT NULL,\r\n  `total_loan` int NOT NULL,\r\n  `amount_paid` int NOT NULL,\r\n  `outstanding_amount` int NOT NULL,\r\n  `created_at` date NOT NULL,\r\n  `created_by` varchar(20) NOT NULL,\r\n  `updated_at` date DEFAULT NULL,\r\n  `updated_by` varchar(20) DEFAULT NULL,\r\n  PRIMARY KEY (`loan_id`)\r\n);
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/loans/target/classes/schema.sql b/loans/target/classes/schema.sql
--- a/loans/target/classes/schema.sql	
+++ b/loans/target/classes/schema.sql	
@@ -1,4 +1,4 @@
-CREATE TABLE IF NOT EXISTS `loans` (
+CREATE TABLE IF NOT EXISTS `loan` (
   `loan_id` int NOT NULL AUTO_INCREMENT,
   `mobile_number` varchar(15) NOT NULL,
   `loan_number` varchar(100) NOT NULL,
Index: loans/target/jib-image.id
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>sha256:4dd11c7df914ed5f8da8e9c0c5dee96ff923ce1578d0de878e9e2258f34a0512
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/loans/target/jib-image.id b/loans/target/jib-image.id
--- a/loans/target/jib-image.id	
+++ b/loans/target/jib-image.id	
@@ -1,1 +1,1 @@
-sha256:4dd11c7df914ed5f8da8e9c0c5dee96ff923ce1578d0de878e9e2258f34a0512
\ No newline at end of file
+sha256:bac018605d8e0f571be05aa62f6d65a971693834429c42a38ff7025e20ef8395
\ No newline at end of file
Index: loans/target/jib-cache/jib-classpath-file
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/app/resources:/app/classes:/app/libs/spring-boot-starter-data-jpa-3.3.4.jar:/app/libs/spring-boot-starter-aop-3.3.4.jar:/app/libs/spring-aop-6.1.13.jar:/app/libs/aspectjweaver-1.9.22.1.jar:/app/libs/spring-boot-starter-jdbc-3.3.4.jar:/app/libs/HikariCP-5.1.0.jar:/app/libs/spring-jdbc-6.1.13.jar:/app/libs/hibernate-core-6.5.3.Final.jar:/app/libs/jakarta.persistence-api-3.1.0.jar:/app/libs/jakarta.transaction-api-2.0.1.jar:/app/libs/jboss-logging-3.5.3.Final.jar:/app/libs/hibernate-commons-annotations-6.0.6.Final.jar:/app/libs/jandex-3.1.2.jar:/app/libs/classmate-1.7.0.jar:/app/libs/byte-buddy-1.14.19.jar:/app/libs/jaxb-runtime-4.0.5.jar:/app/libs/jaxb-core-4.0.5.jar:/app/libs/angus-activation-2.0.2.jar:/app/libs/txw2-4.0.5.jar:/app/libs/istack-commons-runtime-4.1.2.jar:/app/libs/jakarta.inject-api-2.0.1.jar:/app/libs/antlr4-runtime-4.13.0.jar:/app/libs/spring-data-jpa-3.3.4.jar:/app/libs/spring-data-commons-3.3.4.jar:/app/libs/spring-orm-6.1.13.jar:/app/libs/spring-context-6.1.13.jar:/app/libs/spring-tx-6.1.13.jar:/app/libs/spring-beans-6.1.13.jar:/app/libs/jakarta.annotation-api-2.1.1.jar:/app/libs/slf4j-api-2.0.16.jar:/app/libs/spring-aspects-6.1.13.jar:/app/libs/spring-boot-starter-validation-3.3.4.jar:/app/libs/spring-boot-starter-3.3.4.jar:/app/libs/spring-boot-starter-logging-3.3.4.jar:/app/libs/logback-classic-1.5.8.jar:/app/libs/logback-core-1.5.8.jar:/app/libs/log4j-to-slf4j-2.23.1.jar:/app/libs/log4j-api-2.23.1.jar:/app/libs/jul-to-slf4j-2.0.16.jar:/app/libs/snakeyaml-2.2.jar:/app/libs/tomcat-embed-el-10.1.30.jar:/app/libs/hibernate-validator-8.0.1.Final.jar:/app/libs/jakarta.validation-api-3.0.2.jar:/app/libs/spring-boot-starter-web-3.3.4.jar:/app/libs/spring-boot-starter-json-3.3.4.jar:/app/libs/jackson-datatype-jdk8-2.17.2.jar:/app/libs/jackson-datatype-jsr310-2.17.2.jar:/app/libs/jackson-module-parameter-names-2.17.2.jar:/app/libs/spring-boot-starter-tomcat-3.3.4.jar:/app/libs/tomcat-embed-core-10.1.30.jar:/app/libs/tomcat-embed-websocket-10.1.30.jar:/app/libs/spring-web-6.1.13.jar:/app/libs/micrometer-observation-1.13.4.jar:/app/libs/micrometer-commons-1.13.4.jar:/app/libs/spring-webmvc-6.1.13.jar:/app/libs/spring-expression-6.1.13.jar:/app/libs/springdoc-openapi-starter-webmvc-ui-2.6.0.jar:/app/libs/springdoc-openapi-starter-webmvc-api-2.6.0.jar:/app/libs/springdoc-openapi-starter-common-2.6.0.jar:/app/libs/swagger-core-jakarta-2.2.22.jar:/app/libs/commons-lang3-3.14.0.jar:/app/libs/swagger-annotations-jakarta-2.2.22.jar:/app/libs/swagger-models-jakarta-2.2.22.jar:/app/libs/jackson-dataformat-yaml-2.17.2.jar:/app/libs/swagger-ui-5.17.14.jar:/app/libs/spring-boot-devtools-3.3.4.jar:/app/libs/spring-boot-3.3.4.jar:/app/libs/spring-boot-autoconfigure-3.3.4.jar:/app/libs/h2-2.2.224.jar:/app/libs/spring-cloud-starter-bus-amqp-4.1.2.jar:/app/libs/spring-cloud-starter-stream-rabbit-4.1.3.jar:/app/libs/spring-cloud-stream-binder-rabbit-4.1.3.jar:/app/libs/spring-cloud-stream-binder-rabbit-core-4.1.3.jar:/app/libs/spring-boot-starter-webflux-3.3.4.jar:/app/libs/spring-boot-starter-reactor-netty-3.3.4.jar:/app/libs/spring-webflux-6.1.13.jar:/app/libs/reactor-netty-1.1.22.jar:/app/libs/reactor-netty-core-1.1.22.jar:/app/libs/netty-handler-4.1.113.Final.jar:/app/libs/netty-common-4.1.113.Final.jar:/app/libs/netty-resolver-4.1.113.Final.jar:/app/libs/netty-buffer-4.1.113.Final.jar:/app/libs/netty-transport-4.1.113.Final.jar:/app/libs/netty-transport-native-unix-common-4.1.113.Final.jar:/app/libs/netty-codec-4.1.113.Final.jar:/app/libs/netty-handler-proxy-4.1.113.Final.jar:/app/libs/netty-codec-socks-4.1.113.Final.jar:/app/libs/netty-resolver-dns-4.1.113.Final.jar:/app/libs/netty-codec-dns-4.1.113.Final.jar:/app/libs/netty-resolver-dns-native-macos-4.1.113.Final-osx-x86_64.jar:/app/libs/netty-resolver-dns-classes-macos-4.1.113.Final.jar:/app/libs/netty-transport-native-epoll-4.1.113.Final-linux-x86_64.jar:/app/libs/netty-transport-classes-epoll-4.1.113.Final.jar:/app/libs/reactor-netty-http-1.1.22.jar:/app/libs/netty-codec-http-4.1.113.Final.jar:/app/libs/netty-codec-http2-4.1.113.Final.jar:/app/libs/reactor-netty-incubator-quic-0.1.22.jar:/app/libs/netty-incubator-codec-native-quic-0.0.66.Final-linux-x86_64.jar:/app/libs/netty-incubator-codec-classes-quic-0.0.66.Final.jar:/app/libs/spring-cloud-stream-4.1.3.jar:/app/libs/spring-cloud-function-context-4.1.3.jar:/app/libs/typetools-0.6.2.jar:/app/libs/spring-cloud-function-core-4.1.3.jar:/app/libs/json-20240303.jar:/app/libs/kotlin-stdlib-jdk8-1.9.25.jar:/app/libs/kotlin-stdlib-1.9.25.jar:/app/libs/annotations-13.0.jar:/app/libs/kotlin-stdlib-jdk7-1.9.25.jar:/app/libs/spring-boot-starter-amqp-3.3.4.jar:/app/libs/spring-rabbit-3.1.7.jar:/app/libs/spring-amqp-3.1.7.jar:/app/libs/amqp-client-5.21.0.jar:/app/libs/spring-integration-amqp-6.3.4.jar:/app/libs/spring-integration-jmx-6.3.4.jar:/app/libs/httpclient-4.5.14.jar:/app/libs/httpcore-4.4.16.jar:/app/libs/commons-logging-1.2.jar:/app/libs/commons-codec-1.16.1.jar:/app/libs/spring-cloud-bus-4.1.2.jar:/app/libs/spring-integration-core-6.3.4.jar:/app/libs/spring-messaging-6.1.13.jar:/app/libs/spring-retry-2.0.9.jar:/app/libs/reactor-core-3.6.10.jar:/app/libs/reactive-streams-1.0.4.jar:/app/libs/lombok-1.18.34.jar:/app/libs/spring-cloud-starter-config-4.1.3.jar:/app/libs/spring-cloud-starter-4.1.4.jar:/app/libs/spring-cloud-context-4.1.4.jar:/app/libs/spring-security-crypto-6.3.3.jar:/app/libs/spring-cloud-commons-4.1.4.jar:/app/libs/spring-security-rsa-1.1.3.jar:/app/libs/bcprov-jdk18on-1.78.jar:/app/libs/spring-cloud-config-client-4.1.3.jar:/app/libs/jackson-annotations-2.17.2.jar:/app/libs/httpclient5-5.3.1.jar:/app/libs/httpcore5-5.2.5.jar:/app/libs/httpcore5-h2-5.2.5.jar:/app/libs/jackson-databind-2.17.2.jar:/app/libs/jackson-core-2.17.2.jar:/app/libs/jakarta.xml.bind-api-4.0.2.jar:/app/libs/jakarta.activation-api-2.1.3.jar:/app/libs/spring-core-6.1.13.jar:/app/libs/spring-jcl-6.1.13.jar
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/loans/target/jib-cache/jib-classpath-file b/loans/target/jib-cache/jib-classpath-file
--- a/loans/target/jib-cache/jib-classpath-file	
+++ b/loans/target/jib-cache/jib-classpath-file	
@@ -1,1 +1,1 @@
-/app/resources:/app/classes:/app/libs/spring-boot-starter-data-jpa-3.3.4.jar:/app/libs/spring-boot-starter-aop-3.3.4.jar:/app/libs/spring-aop-6.1.13.jar:/app/libs/aspectjweaver-1.9.22.1.jar:/app/libs/spring-boot-starter-jdbc-3.3.4.jar:/app/libs/HikariCP-5.1.0.jar:/app/libs/spring-jdbc-6.1.13.jar:/app/libs/hibernate-core-6.5.3.Final.jar:/app/libs/jakarta.persistence-api-3.1.0.jar:/app/libs/jakarta.transaction-api-2.0.1.jar:/app/libs/jboss-logging-3.5.3.Final.jar:/app/libs/hibernate-commons-annotations-6.0.6.Final.jar:/app/libs/jandex-3.1.2.jar:/app/libs/classmate-1.7.0.jar:/app/libs/byte-buddy-1.14.19.jar:/app/libs/jaxb-runtime-4.0.5.jar:/app/libs/jaxb-core-4.0.5.jar:/app/libs/angus-activation-2.0.2.jar:/app/libs/txw2-4.0.5.jar:/app/libs/istack-commons-runtime-4.1.2.jar:/app/libs/jakarta.inject-api-2.0.1.jar:/app/libs/antlr4-runtime-4.13.0.jar:/app/libs/spring-data-jpa-3.3.4.jar:/app/libs/spring-data-commons-3.3.4.jar:/app/libs/spring-orm-6.1.13.jar:/app/libs/spring-context-6.1.13.jar:/app/libs/spring-tx-6.1.13.jar:/app/libs/spring-beans-6.1.13.jar:/app/libs/jakarta.annotation-api-2.1.1.jar:/app/libs/slf4j-api-2.0.16.jar:/app/libs/spring-aspects-6.1.13.jar:/app/libs/spring-boot-starter-validation-3.3.4.jar:/app/libs/spring-boot-starter-3.3.4.jar:/app/libs/spring-boot-starter-logging-3.3.4.jar:/app/libs/logback-classic-1.5.8.jar:/app/libs/logback-core-1.5.8.jar:/app/libs/log4j-to-slf4j-2.23.1.jar:/app/libs/log4j-api-2.23.1.jar:/app/libs/jul-to-slf4j-2.0.16.jar:/app/libs/snakeyaml-2.2.jar:/app/libs/tomcat-embed-el-10.1.30.jar:/app/libs/hibernate-validator-8.0.1.Final.jar:/app/libs/jakarta.validation-api-3.0.2.jar:/app/libs/spring-boot-starter-web-3.3.4.jar:/app/libs/spring-boot-starter-json-3.3.4.jar:/app/libs/jackson-datatype-jdk8-2.17.2.jar:/app/libs/jackson-datatype-jsr310-2.17.2.jar:/app/libs/jackson-module-parameter-names-2.17.2.jar:/app/libs/spring-boot-starter-tomcat-3.3.4.jar:/app/libs/tomcat-embed-core-10.1.30.jar:/app/libs/tomcat-embed-websocket-10.1.30.jar:/app/libs/spring-web-6.1.13.jar:/app/libs/micrometer-observation-1.13.4.jar:/app/libs/micrometer-commons-1.13.4.jar:/app/libs/spring-webmvc-6.1.13.jar:/app/libs/spring-expression-6.1.13.jar:/app/libs/springdoc-openapi-starter-webmvc-ui-2.6.0.jar:/app/libs/springdoc-openapi-starter-webmvc-api-2.6.0.jar:/app/libs/springdoc-openapi-starter-common-2.6.0.jar:/app/libs/swagger-core-jakarta-2.2.22.jar:/app/libs/commons-lang3-3.14.0.jar:/app/libs/swagger-annotations-jakarta-2.2.22.jar:/app/libs/swagger-models-jakarta-2.2.22.jar:/app/libs/jackson-dataformat-yaml-2.17.2.jar:/app/libs/swagger-ui-5.17.14.jar:/app/libs/spring-boot-devtools-3.3.4.jar:/app/libs/spring-boot-3.3.4.jar:/app/libs/spring-boot-autoconfigure-3.3.4.jar:/app/libs/h2-2.2.224.jar:/app/libs/spring-cloud-starter-bus-amqp-4.1.2.jar:/app/libs/spring-cloud-starter-stream-rabbit-4.1.3.jar:/app/libs/spring-cloud-stream-binder-rabbit-4.1.3.jar:/app/libs/spring-cloud-stream-binder-rabbit-core-4.1.3.jar:/app/libs/spring-boot-starter-webflux-3.3.4.jar:/app/libs/spring-boot-starter-reactor-netty-3.3.4.jar:/app/libs/spring-webflux-6.1.13.jar:/app/libs/reactor-netty-1.1.22.jar:/app/libs/reactor-netty-core-1.1.22.jar:/app/libs/netty-handler-4.1.113.Final.jar:/app/libs/netty-common-4.1.113.Final.jar:/app/libs/netty-resolver-4.1.113.Final.jar:/app/libs/netty-buffer-4.1.113.Final.jar:/app/libs/netty-transport-4.1.113.Final.jar:/app/libs/netty-transport-native-unix-common-4.1.113.Final.jar:/app/libs/netty-codec-4.1.113.Final.jar:/app/libs/netty-handler-proxy-4.1.113.Final.jar:/app/libs/netty-codec-socks-4.1.113.Final.jar:/app/libs/netty-resolver-dns-4.1.113.Final.jar:/app/libs/netty-codec-dns-4.1.113.Final.jar:/app/libs/netty-resolver-dns-native-macos-4.1.113.Final-osx-x86_64.jar:/app/libs/netty-resolver-dns-classes-macos-4.1.113.Final.jar:/app/libs/netty-transport-native-epoll-4.1.113.Final-linux-x86_64.jar:/app/libs/netty-transport-classes-epoll-4.1.113.Final.jar:/app/libs/reactor-netty-http-1.1.22.jar:/app/libs/netty-codec-http-4.1.113.Final.jar:/app/libs/netty-codec-http2-4.1.113.Final.jar:/app/libs/reactor-netty-incubator-quic-0.1.22.jar:/app/libs/netty-incubator-codec-native-quic-0.0.66.Final-linux-x86_64.jar:/app/libs/netty-incubator-codec-classes-quic-0.0.66.Final.jar:/app/libs/spring-cloud-stream-4.1.3.jar:/app/libs/spring-cloud-function-context-4.1.3.jar:/app/libs/typetools-0.6.2.jar:/app/libs/spring-cloud-function-core-4.1.3.jar:/app/libs/json-20240303.jar:/app/libs/kotlin-stdlib-jdk8-1.9.25.jar:/app/libs/kotlin-stdlib-1.9.25.jar:/app/libs/annotations-13.0.jar:/app/libs/kotlin-stdlib-jdk7-1.9.25.jar:/app/libs/spring-boot-starter-amqp-3.3.4.jar:/app/libs/spring-rabbit-3.1.7.jar:/app/libs/spring-amqp-3.1.7.jar:/app/libs/amqp-client-5.21.0.jar:/app/libs/spring-integration-amqp-6.3.4.jar:/app/libs/spring-integration-jmx-6.3.4.jar:/app/libs/httpclient-4.5.14.jar:/app/libs/httpcore-4.4.16.jar:/app/libs/commons-logging-1.2.jar:/app/libs/commons-codec-1.16.1.jar:/app/libs/spring-cloud-bus-4.1.2.jar:/app/libs/spring-integration-core-6.3.4.jar:/app/libs/spring-messaging-6.1.13.jar:/app/libs/spring-retry-2.0.9.jar:/app/libs/reactor-core-3.6.10.jar:/app/libs/reactive-streams-1.0.4.jar:/app/libs/lombok-1.18.34.jar:/app/libs/spring-cloud-starter-config-4.1.3.jar:/app/libs/spring-cloud-starter-4.1.4.jar:/app/libs/spring-cloud-context-4.1.4.jar:/app/libs/spring-security-crypto-6.3.3.jar:/app/libs/spring-cloud-commons-4.1.4.jar:/app/libs/spring-security-rsa-1.1.3.jar:/app/libs/bcprov-jdk18on-1.78.jar:/app/libs/spring-cloud-config-client-4.1.3.jar:/app/libs/jackson-annotations-2.17.2.jar:/app/libs/httpclient5-5.3.1.jar:/app/libs/httpcore5-5.2.5.jar:/app/libs/httpcore5-h2-5.2.5.jar:/app/libs/jackson-databind-2.17.2.jar:/app/libs/jackson-core-2.17.2.jar:/app/libs/jakarta.xml.bind-api-4.0.2.jar:/app/libs/jakarta.activation-api-2.1.3.jar:/app/libs/spring-core-6.1.13.jar:/app/libs/spring-jcl-6.1.13.jar
\ No newline at end of file
+/app/resources:/app/classes:/app/libs/spring-boot-starter-data-jpa-3.3.4.jar:/app/libs/spring-boot-starter-aop-3.3.4.jar:/app/libs/spring-aop-6.1.13.jar:/app/libs/aspectjweaver-1.9.22.1.jar:/app/libs/spring-boot-starter-jdbc-3.3.4.jar:/app/libs/HikariCP-5.1.0.jar:/app/libs/spring-jdbc-6.1.13.jar:/app/libs/hibernate-core-6.5.3.Final.jar:/app/libs/jakarta.persistence-api-3.1.0.jar:/app/libs/jakarta.transaction-api-2.0.1.jar:/app/libs/jboss-logging-3.5.3.Final.jar:/app/libs/hibernate-commons-annotations-6.0.6.Final.jar:/app/libs/jandex-3.1.2.jar:/app/libs/classmate-1.7.0.jar:/app/libs/byte-buddy-1.14.19.jar:/app/libs/jaxb-runtime-4.0.5.jar:/app/libs/jaxb-core-4.0.5.jar:/app/libs/angus-activation-2.0.2.jar:/app/libs/txw2-4.0.5.jar:/app/libs/istack-commons-runtime-4.1.2.jar:/app/libs/jakarta.inject-api-2.0.1.jar:/app/libs/antlr4-runtime-4.13.0.jar:/app/libs/spring-data-jpa-3.3.4.jar:/app/libs/spring-data-commons-3.3.4.jar:/app/libs/spring-orm-6.1.13.jar:/app/libs/spring-context-6.1.13.jar:/app/libs/spring-tx-6.1.13.jar:/app/libs/spring-beans-6.1.13.jar:/app/libs/jakarta.annotation-api-2.1.1.jar:/app/libs/slf4j-api-2.0.16.jar:/app/libs/spring-aspects-6.1.13.jar:/app/libs/spring-boot-starter-validation-3.3.4.jar:/app/libs/spring-boot-starter-3.3.4.jar:/app/libs/spring-boot-starter-logging-3.3.4.jar:/app/libs/logback-classic-1.5.8.jar:/app/libs/logback-core-1.5.8.jar:/app/libs/log4j-to-slf4j-2.23.1.jar:/app/libs/log4j-api-2.23.1.jar:/app/libs/jul-to-slf4j-2.0.16.jar:/app/libs/snakeyaml-2.2.jar:/app/libs/tomcat-embed-el-10.1.30.jar:/app/libs/hibernate-validator-8.0.1.Final.jar:/app/libs/jakarta.validation-api-3.0.2.jar:/app/libs/spring-boot-starter-web-3.3.4.jar:/app/libs/spring-boot-starter-json-3.3.4.jar:/app/libs/jackson-datatype-jdk8-2.17.2.jar:/app/libs/jackson-datatype-jsr310-2.17.2.jar:/app/libs/jackson-module-parameter-names-2.17.2.jar:/app/libs/spring-boot-starter-tomcat-3.3.4.jar:/app/libs/tomcat-embed-core-10.1.30.jar:/app/libs/tomcat-embed-websocket-10.1.30.jar:/app/libs/spring-web-6.1.13.jar:/app/libs/micrometer-observation-1.13.4.jar:/app/libs/micrometer-commons-1.13.4.jar:/app/libs/spring-webmvc-6.1.13.jar:/app/libs/spring-expression-6.1.13.jar:/app/libs/springdoc-openapi-starter-webmvc-ui-2.6.0.jar:/app/libs/springdoc-openapi-starter-webmvc-api-2.6.0.jar:/app/libs/springdoc-openapi-starter-common-2.6.0.jar:/app/libs/swagger-core-jakarta-2.2.22.jar:/app/libs/commons-lang3-3.14.0.jar:/app/libs/swagger-annotations-jakarta-2.2.22.jar:/app/libs/swagger-models-jakarta-2.2.22.jar:/app/libs/jackson-dataformat-yaml-2.17.2.jar:/app/libs/swagger-ui-5.17.14.jar:/app/libs/spring-boot-devtools-3.3.4.jar:/app/libs/spring-boot-3.3.4.jar:/app/libs/spring-boot-autoconfigure-3.3.4.jar:/app/libs/h2-2.2.224.jar:/app/libs/mysql-connector-j-8.3.0.jar:/app/libs/lombok-1.18.34.jar:/app/libs/spring-cloud-starter-config-4.1.3.jar:/app/libs/spring-cloud-starter-4.1.4.jar:/app/libs/spring-cloud-context-4.1.4.jar:/app/libs/spring-security-crypto-6.3.3.jar:/app/libs/spring-cloud-commons-4.1.4.jar:/app/libs/spring-security-rsa-1.1.3.jar:/app/libs/bcprov-jdk18on-1.78.jar:/app/libs/spring-cloud-config-client-4.1.3.jar:/app/libs/jackson-annotations-2.17.2.jar:/app/libs/httpclient5-5.3.1.jar:/app/libs/httpcore5-5.2.5.jar:/app/libs/httpcore5-h2-5.2.5.jar:/app/libs/jackson-databind-2.17.2.jar:/app/libs/jackson-core-2.17.2.jar:/app/libs/jakarta.xml.bind-api-4.0.2.jar:/app/libs/jakarta.activation-api-2.1.3.jar:/app/libs/spring-core-6.1.13.jar:/app/libs/spring-jcl-6.1.13.jar
\ No newline at end of file
Index: loans/target/jib-image.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"image\":\"akuchera/loans:3\",\"imageId\":\"sha256:4dd11c7df914ed5f8da8e9c0c5dee96ff923ce1578d0de878e9e2258f34a0512\",\"imageDigest\":\"sha256:1c5da4e90f85664150a96ec06541864cb37d1959d45208688903b00aa89fb11e\",\"tags\":[\"3\"],\"imagePushed\":true}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/loans/target/jib-image.json b/loans/target/jib-image.json
--- a/loans/target/jib-image.json	
+++ b/loans/target/jib-image.json	
@@ -1,1 +1,1 @@
-{"image":"akuchera/loans:3","imageId":"sha256:4dd11c7df914ed5f8da8e9c0c5dee96ff923ce1578d0de878e9e2258f34a0512","imageDigest":"sha256:1c5da4e90f85664150a96ec06541864cb37d1959d45208688903b00aa89fb11e","tags":["3"],"imagePushed":true}
\ No newline at end of file
+{"image":"akuchera/loans:4","imageId":"sha256:bac018605d8e0f571be05aa62f6d65a971693834429c42a38ff7025e20ef8395","imageDigest":"sha256:b6e173b546e0525110e0f376902e8710e97113cdfcbc74392d4acd3a2f083a4b","tags":["4"],"imagePushed":true}
\ No newline at end of file
Index: docker-compose/default/common-config.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>services:\r\n  network-deploy-service:\r\n    networks:\r\n      - \"microservice-bank\"\r\n  microservice-base-config:\r\n    extends:\r\n      service: network-deploy-service\r\n    deploy:\r\n      resources:\r\n        limits:\r\n          memory: 700m\r\n    environment:\r\n      SPRING_PROFILES_ACTIVE: default\r\n  microservice-configserver-config:\r\n    extends:\r\n      service: microservice-base-config\r\n    environment:\r\n      SPRING_PROFILES_ACTIVE: default\r\n      SPRING_CONFIG_IMPORT: configserver:http://configserver:8071/
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/docker-compose/default/common-config.yml b/docker-compose/default/common-config.yml
--- a/docker-compose/default/common-config.yml	
+++ b/docker-compose/default/common-config.yml	
@@ -2,6 +2,19 @@
   network-deploy-service:
     networks:
       - "microservice-bank"
+  microservice-db-config:
+    extends:
+      service: network-deploy-service
+    image: mysql
+    healthcheck:
+      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
+      timeout: 10s
+      retries: 10
+      interval: 10s
+      start_period: 10s
+    environment:
+      MYSQL_ROOT_PASSWORD: root
+
   microservice-base-config:
     extends:
       service: network-deploy-service
@@ -16,4 +29,6 @@
       service: microservice-base-config
     environment:
       SPRING_PROFILES_ACTIVE: default
-      SPRING_CONFIG_IMPORT: configserver:http://configserver:8071/
\ No newline at end of file
+      SPRING_CONFIG_IMPORT: configserver:http://configserver:8071/
+      SPRING_DATASOURCE_USERNAME: root
+      SPRING_DATASOURCE_PASSWORD: root
Index: cards/src/main/resources/application-test.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>logging:\r\n  pattern:\r\n    console: \"${LOGGER_PATTERN:%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n}}\"\r\n\r\nspring:\r\n  datasource:\r\n    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE\r\n    driverClassName: org.h2.Driver\r\n    username: sa\r\n    password:\r\n    initialization-mode: always\r\n  h2:\r\n    console:\r\n      enabled: true\r\n  jpa:\r\n    hibernate:\r\n      ddl-auto: create-drop\r\n    show-sql: true\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cards/src/main/resources/application-test.yml b/cards/src/main/resources/application-test.yml
--- a/cards/src/main/resources/application-test.yml	
+++ b/cards/src/main/resources/application-test.yml	
@@ -7,7 +7,7 @@
     url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
     driverClassName: org.h2.Driver
     username: sa
-    password:
+    password: ''
     initialization-mode: always
   h2:
     console:
Index: cards/src/main/resources/schema.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>CREATE TABLE IF NOT EXISTS `cards` (\r\n  `card_id` int NOT NULL AUTO_INCREMENT,\r\n  `mobile_number` varchar(15) NOT NULL,\r\n  `card_number` varchar(100) NOT NULL,\r\n  `card_type` varchar(100) NOT NULL,\r\n  `total_limit` int NOT NULL,\r\n  `amount_used` int NOT NULL,\r\n  `available_amount` int NOT NULL,\r\n  `created_at` date NOT NULL,\r\n  `created_by` varchar(20) NOT NULL,\r\n  `updated_at` date DEFAULT NULL,\r\n  `updated_by` varchar(20) DEFAULT NULL,\r\n  PRIMARY KEY (`card_id`)\r\n);
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cards/src/main/resources/schema.sql b/cards/src/main/resources/schema.sql
--- a/cards/src/main/resources/schema.sql	
+++ b/cards/src/main/resources/schema.sql	
@@ -1,4 +1,4 @@
-CREATE TABLE IF NOT EXISTS `cards` (
+CREATE TABLE IF NOT EXISTS `card` (
   `card_id` int NOT NULL AUTO_INCREMENT,
   `mobile_number` varchar(15) NOT NULL,
   `card_number` varchar(100) NOT NULL,
