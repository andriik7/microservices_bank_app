logging:
  level:
    com:
      microservicesbank:
        gatewayserver: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
    #console: "${LOGGER_PATTERN:%red(%d{HH:mm:ss.SSS}) %blue(%-5level) %yellow([%thread]) %green(%logger{15}) - %msg%n}}"

spring:
  application:
    name: gatewayserver
  config:
    import: optional:configserver:http://localhost:8071/
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #to enable service discovery
          lowerCaseServiceId: true #to enable service discovery in lower case
      httpclient:
        connect-timeout: 1000
        response-timeout: 3s
  data:
    redis:
      connection-timeout: 2s #how long should we wait for a connection with Redis
      host: localhost
      port: 6379
  #Auth server configuration
  security:
    oauth2:
      resourceserver:
          jwt:
            jwk-set-uri: http://keycloak.default.svc.cluster.local:80/realms/dev/protocol/openid-connect/certs


management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    gateway:
      enabled: true
  info:
    env:
      enabled: true #to enable info details for an actuator
  metrics:
    tags:
      application: ${spring.application.name}

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10 #how many requests should be monitored to change state from closed to open
      permittedNumberOfCallsInHalfOpenState: 2 #number of calls allowed in half open state
      failureRateThreshold: 50 #percentage of failures to check out from closed state to the open one
      waitDurationInOpenState: 10000 #how long should we wait in open state before changing to half open (10000 = 10 seconds)

info:
  app:
    name: gatewayserver
    description: Microservicesbank Gateway Server
    version: 3.1